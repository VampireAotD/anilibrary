services:
  database:
    build:
      context: docker/mysql
    container_name: anilibrary-database
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_AUTHENTICATION_PLUGIN: caching_sha2_password
    healthcheck:
      test: [ "CMD", "mysqladmin", "-u$MYSQL_USER", "-p$MYSQL_PASSWORD",  "ping", "-h", "localhost" ]
      interval: 2s
      timeout: 5s
      retries: 5
    volumes:
      - mysql-data:/var/lib/mysql:rw
    ports:
      - ${MYSQL_PORT}:3306
    networks:
      - local

  redis:
    image: redis:latest
    container_name: anilibrary-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli -a $REDIS_PASSWORD ping | grep PONG" ]
      interval: 2s
      timeout: 5s
      retries: 5
    volumes:
      - anilibrary-redis-data:/data
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - local

  nginx:
    depends_on:
      app:
        condition: service_healthy
    build:
      context: docker/nginx
    container_name: anilibrary-nginx
    environment:
      NGINX_LOGS_TO_LOGSTASH: ${NGINX_LOGS_TO_LOGSTASH}
    volumes:
      - ./src/public:/anilibrary/public
    ports:
      - ${SERVER_PORT}:80
    networks:
      - local
      - anilibrary

  app:
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    build:
      context: docker/php
    container_name: anilibrary
    environment:
      XDEBUG_MODE: ${XDEBUG_MODE}
    extra_hosts:
      - "host.docker.internal:host-gateway" # for xdebug
    volumes:
      - ./src:/anilibrary
    ports:
      - ${NODE_PORT}:5173
    networks:
      - local
      - anilibrary
      - testing

networks:
  local:
    driver: bridge
  anilibrary:
    name: anilibrary
  testing:
    name: testing

volumes:
  mysql-data:
  anilibrary-redis-data: