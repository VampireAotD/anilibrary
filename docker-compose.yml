version: '3.9'

services:
  database:
    image: mysql:8.0
    container_name: database
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_AUTHENTICATION_PLUGIN: mysql_native_password
    healthcheck:
      test: [ "CMD", "mysqladmin", "-u$MYSQL_USER", "-p$MYSQL_PASSWORD",  "ping", "-h", "localhost" ]
      interval: 2s
      timeout: 5s
      retries: 5
    volumes:
      - mysql-data:/var/lib/mysql:rw
      - ./docker/mysql/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/
    ports:
      - ${MYSQL_PORT:-3306}:3306
    networks:
      - local

  redis:
    image: redis:latest
    container_name: redis
    hostname: ${REDIS_HOSTNAME:-localhost}
    command: redis-server --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli -a $REDIS_PASSWORD ping | grep PONG" ]
      interval: 2s
      timeout: 5s
      retries: 5
    volumes:
      - anilibrary-redis-data:/data
    ports:
      - ${REDIS_PORT:-6379}:6379
    networks:
      - local

  app:
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    build:
      args:
        GROUP_ID: ${GROUP_ID:-1000}
        USER_ID: ${USER_ID:-1000}
      context: docker
      dockerfile: php/Dockerfile
    container_name: php
    tty: true
    environment:
      XDEBUG_MODE: ${XDEBUG_MODE:-off}
    ports:
      - "9000:9000"
    volumes:
      - ./src:/anilibrary
      - ./docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro
      - ./docker/supervisor/supervisord.conf:/etc/supervisor/supervisord.conf
      - ./docker/supervisor/conf.d/:/etc/supervisor/conf.d/
    networks:
      - anilibrary
      - local

  nginx:
    build:
      context: docker
      dockerfile: nginx/Dockerfile
    depends_on:
      - app
    ports:
      - "80:80"
    volumes:
      - ./src/public:/anilibrary/public
    networks:
      - local

networks:
  local:
    driver: bridge
  anilibrary:
    name: anilibrary

volumes:
  mysql-data:
  anilibrary-redis-data: